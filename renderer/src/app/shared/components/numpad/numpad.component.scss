@use '../../../../theme/mixins.scss' as *;

.numpad-container {
    margin: 50px auto;
    width: 300px;

    .display {
        height: 60px;

        input {
            width: 100%;
            padding: 25px 20px;
            font-size: 2em;
            border-bottom-color: transparent;
            border-radius: 10px;
            font-weight: 800;
            font-family: consolas, monospace;
            text-align: right;
        }
    }

    .actions {
        width: 100%;
        display: grid;
        grid-template-columns: repeat(4, 1fr);
        grid-template-rows: repeat(4, 60px);
        gap: 5px;

        button {
            --current-color: var(--medium-color-tint);
            --accent-color: var(--primary-color);

            min-width: auto;
            padding: 0;
            margin: 0;
            font-weight: 700;
            font-size: 1.5em;
            background: none;
            color: var(--current-color);
            border: 1px solid color-mix(in srgb, var(--light-color-shade), #000 10%);
            border-radius: 10px;
            position: relative;

            &:hover {
                background: color-mix(in srgb, var(--accent-color), #0000 80%);
                border-color: color-mix(in srgb, var(--accent-color), #0000 80%);//var(--accent-color);
                color: var(--accent-color);
            }

            &:active,
            &.active {
                background: color-mix(in srgb, var(--accent-color), #0000 70%);
                border-color: var(--accent-color);
                color: var(--accent-color);
                transform: scale(0.92);
            }

            &[data-value="clear"] {
                --current-color: rgb(11, 183, 202);
                --accent-color: var(--current-color);
            }

            &[data-value="confirm"] {
                --current-color: var(--success-color);
                --accent-color: var(--current-color);

                &::before {
                    @include absolute($otherTransforms: rotate(45deg));

                    content: '';
                    width: 10px;
                    height: 30px;
                    border-bottom: 4px solid var(--accent-color);
                    border-right: 4px solid var(--accent-color);
                }
            }

            &[data-value="delete"] {
                --current-color: var(--danger-color);
                --accent-color: var(--current-color);

                &::before {
                    @include absolute;

                    content: '';
                    width: 30px;
                    height: 4px;
                    background: var(--accent-color);
                    border-radius: 2em;
                }

                &::after {
                    @include absolute($left: 50%, $tx: -15px, $otherTransforms: rotate(-45deg));

                    content: '';
                    width: 8px;
                    height: 8px;
                    border-left: 4px solid var(--accent-color);
                    border-top:  4px solid var(--accent-color);
                    border-top-left-radius: 2px;
                }
            }

            // positionnement

            &[data-value="7"] { grid-area: 1 / 1 / 2 / 2; }
            &[data-value="8"] { grid-area: 1 / 2 / 2 / 3; }
            &[data-value="9"] { grid-area: 1 / 3 / 2 / 4; }
            &[data-value="delete"] { grid-area: 1 / 4 / 2 / 5; }

            &[data-value="4"] { grid-area: 2 / 1 / 3 / 2; }
            &[data-value="5"] { grid-area: 2 / 2 / 3 / 3; }
            &[data-value="6"] { grid-area: 2 / 3 / 3 / 4; }
            &[data-value="clear"] { grid-area: 2 / 4 / 3 / 5; }

            &[data-value="1"] { grid-area: 3 / 1 / 4 / 2; }
            &[data-value="2"] { grid-area: 3 / 2 / 4 / 3; }
            &[data-value="3"] { grid-area: 3 / 3 / 4 / 4; }
            &[data-value="confirm"] { grid-area: 3 / 4 / 5 / 5; }

            &[data-value="0"] { grid-area: 4 / 1 / 4 / 4; }

            &[data-value="negative"] { display: none; }
        }
    }

    &.decimal {
        .actions {
            button[data-value="0"] {
                grid-area: 4 / 1 / 4 / 3;
            }

            button[data-value="."] {
                grid-area: 4 / 3 / 4 / 3;
            }
        }
    }

    &.negative {
        .display {
            input {
                padding-left: 35px;
            }

            &.negative {
                position: relative;

                &::before {
                    @include absolute($left: 15px, $top: 45%);

                    content: '-';
                    font-size: 1.5em;
                    font-weight: 700;
                    font-family: Consolas, monospace;
                }
            }
        }
    }

}
